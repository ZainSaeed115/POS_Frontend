// TopProductsChart.jsx
import React, { useState, useMemo } from 'react';
import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend } from 'recharts';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';

const TopProductsChart = ({ salesData }) => {
  const [viewMode, setViewMode] = useState('daily'); // 'daily' or 'weekly'
  const [metric, setMetric] = useState('orders'); // 'orders' or 'revenue'

  // Aggregate Data for Chart
  const chartData = useMemo(() => {
    const productMap = {};

    salesData.forEach((entry) => {
      const groupKey = viewMode === 'weekly'
        ? new Date(entry.date).toISOString().slice(0, 10 - 3) + 'W'
        : entry.date;

      entry.ProductBreakdown.forEach((product) => {
        const key = `${groupKey}-${product.name}`;
        if (!productMap[key]) {
          productMap[key] = {
            name: product.name,
            date: groupKey,
            orders: 0,
            revenue: 0,
          };
        }
        productMap[key].orders += product.orders;
        productMap[key].revenue += product.revenue;
      });
    });

    const grouped = Object.values(productMap);

    const aggregated = grouped.reduce((acc, curr) => {
      const found = acc.find(item => item.name === curr.name);
      if (found) {
        found.orders += curr.orders;
        found.revenue += curr.revenue;
      } else {
        acc.push({ ...curr });
      }
      return acc;
    }, []);

    return aggregated.sort((a, b) => b[metric] - a[metric]).slice(0, 7);
  }, [salesData, viewMode, metric]);

  return (
    <Card className="mt-6">
      <CardContent>
        <div className="flex items-center justify-between mb-4">
          <div className="space-x-2">
            <Button variant={viewMode === 'daily' ? 'default' : 'outline'} onClick={() => setViewMode('daily')}>Daily</Button>
            <Button variant={viewMode === 'weekly' ? 'default' : 'outline'} onClick={() => setViewMode('weekly')}>Weekly</Button>
          </div>
          <div className="space-x-2">
            <Button variant={metric === 'orders' ? 'default' : 'outline'} onClick={() => setMetric('orders')}>Orders</Button>
            <Button variant={metric === 'revenue' ? 'default' : 'outline'} onClick={() => setMetric('revenue')}>Revenue</Button>
          </div>
        </div>

        <ResponsiveContainer width="100%" height={400}>
          <BarChart data={chartData} layout="vertical" margin={{ left: 50 }}>
            <XAxis type="number" />
            <YAxis dataKey="name" type="category" />
            <Tooltip />
            <Legend />
            <Bar dataKey={metric} fill="#8884d8" name={metric === 'orders' ? 'Orders' : 'Revenue'} />
          </BarChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  );
};

export default TopProductsChart;
